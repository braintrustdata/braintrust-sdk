name: Open Integration Test PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  open-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout SDK repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get branch name and commit hash
        id: branch-info
        run: |
          echo "BRANCH_NAME=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "PARENT_BRANCH_NAME=${{ github.head_ref || github.ref_name }}-sdk-gh-action" >> $GITHUB_ENV

      - name: Checkout parent repository
        uses: actions/checkout@v4
        with:
          repository: braintrustdata/braintrust
          path: parent-repo
          token: ${{ secrets.CROSS_REPO_TOKEN }}
          fetch-depth: 0

      - name: Configure Git in parent repository
        run: |
          cd parent-repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Create or switch to branch in parent repository
        run: |
          cd parent-repo
          # Check if branch exists remotely and create/switch accordingly
          if git ls-remote --heads origin ${{ env.PARENT_BRANCH_NAME }} | grep -q ${{ env.PARENT_BRANCH_NAME }}; then
            git checkout ${{ env.PARENT_BRANCH_NAME }}
            git pull origin ${{ env.PARENT_BRANCH_NAME }}
          else
            git checkout -b ${{ env.PARENT_BRANCH_NAME }} origin/main
          fi

      - name: Update submodule reference
        run: |
          cd parent-repo
          # Initialize and update submodules
          git submodule init
          git submodule update --init --recursive
          cd sdk
          # Make sure we're tracking all remotes
          git remote set-url origin https://github.com/braintrustdata/braintrust-sdk.git
          git fetch origin

          # Create a temporary branch to avoid detached HEAD state
          git checkout -b temp_branch
          git fetch origin ${{ env.COMMIT_HASH }}
          git checkout ${{ env.COMMIT_HASH }}
          cd ..
          git add sdk

          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "Update SDK submodule to latest commit from ${{ env.BRANCH_NAME }}"
            git push origin ${{ env.PARENT_BRANCH_NAME }}
          fi

      - name: Check for existing PR
        id: check-pr
        run: |
          cd parent-repo
          PR_EXISTS=$(gh pr list --state open --head ${{ env.PARENT_BRANCH_NAME }} --json number | jq 'length')
          echo "PR_EXISTS=$PR_EXISTS" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.CROSS_REPO_TOKEN }}

      - name: Create Pull Request if not exists
        if: env.PR_EXISTS == '0'
        run: |
          cd parent-repo
          gh pr create \
            --title "Bot: Update SDK submodule to ${{ env.BRANCH_NAME }}" \
            --body "This PR updates the SDK submodule to point to the latest commit from the branch ${{ env.BRANCH_NAME }}. Created automatically by GitHub Actions." \
            --base main \
            --head ${{ env.PARENT_BRANCH_NAME }}
        env:
          GH_TOKEN: ${{ secrets.CROSS_REPO_TOKEN }}
